{"ts":1348459711738,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Quote Stream\n *\n * @version 0.2.1\n * @author NodeSocket <http://www.nodesocket.com> <hello@nodesocket.com>\n */\n\n /*\n * Copyright (C) 2012 NodeSocket LLC \n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and \n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including \n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial \n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n * TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n////\n// CONFIGURATION SETTINGS\n///\nvar PORT = 4000;\nvar FETCH_INTERVAL = 5000;\nvar PRETTY_PRINT_JSON = true;\n\n///\n// START OF APPLICATION\n///\nvar express = require('express');\nvar http = require('http');\nvar io = require('socket.io');\n\nvar app = express();\nvar server = http.createServer(app);\nvar io = io.listen(server);\nio.set('log level', 1);\n\nserver.listen(PORT);\n\nvar ticker = \"\";\napp.get('/:ticker', function(req, res) {\n\tticker = req.params.ticker;\n\tres.sendfile(__dirname + '/index.html');\n});\n\nio.sockets.on('connection', function(socket) {\n\tvar local_ticker = ticker;\n\tticker = \"\";\n\n\t//Run the first time immediately\n\tget_quote(socket, local_ticker);\n\n\t//Every N seconds\n\tvar timer = setInterval(function() {\n\t\tget_quote(socket, local_ticker)\n\t}, FETCH_INTERVAL);\n\n\tsocket.on('disconnect', function () {\n\t\tclearInterval(timer);\n\t});\n});\n\nfunction get_quote(p_socket, p_ticker) {\n\thttp.get({\n\t\thost: 'www.google.com',\n\t\tport: 80,\n\t\tpath: '/finance/info?client=ig&q=' + p_ticker\n\t}, function(response) {\n\t\tresponse.setEncoding('utf8');\n\t\tvar data = \"\";\n\t\t\t\t\t\n\t\tresponse.on('data', function(chunk) {\n\t\t\tdata += chunk;\n\t\t});\n\t\t\n\t\tresponse.on('end', function() {\n\t\t\tif(data.length > 0) {\n\t\t\t\ttry {\n\t\t\t\t\tvar data_object = JSON.parse(data.substring(3));\n\t\t\t\t} catch(e) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\tvar quote = {};\n\t\t\t\tquote.ticker = data_object[0].t;\n\t\t\t\tquote.exchange = data_object[0].e;\n\t\t\t\tquote.price = data_object[0].l_cur;\n\t\t\t\tquote.change = data_object[0].c;\n\t\t\t\tquote.change_percent = data_object[0].cp;\n\t\t\t\tquote.last_trade_time = data_object[0].lt;\n\t\t\t\tquote.dividend = data_object[0].div;\n\t\t\t\tquote.yield = data_object[0].yld;\n\t\t\t\t\n\t\t\t\tp_socket.emit('quote', PRETTY_PRINT_JSON ? JSON.stringify(quote, true, '\\t') : JSON.stringify(quote));\n\t\t\t}\n\t\t});\n\t});\n}"]],"start1":0,"start2":0,"length1":0,"length2":3012}]],"length":3012}
{"contributors":[],"silentsave":false,"ts":1348459789073,"patch":[[{"diffs":[[0,"T = "],[-1,"4000"],[1,"process.env.PORT"],[0,";\nva"]],"start1":1277,"start2":1277,"length1":12,"length2":24}]],"length":3024,"saved":false}
{"ts":1348459933220,"patch":[[{"diffs":[[0,"\t\tquote."],[-1,"y"],[1,"stockY"],[0,"ield = d"]],"start1":2859,"start2":2859,"length1":17,"length2":22}]],"length":3029,"saved":false}
{"ts":1348460033192,"patch":[[{"diffs":[[0,"T = "],[-1,"process.env.PORT"],[1,"15400"],[0,";\nva"]],"start1":1277,"start2":1277,"length1":24,"length2":13}]],"length":3018,"saved":false}
{"ts":1348460057819,"patch":[[{"diffs":[[0,"T = "],[-1,"15400"],[1,"process.env.PORT"],[0,";\nva"]],"start1":1277,"start2":1277,"length1":13,"length2":24}]],"length":3029,"saved":false}
{"ts":1348460110594,"patch":[[{"diffs":[[0,"(PORT);\n"],[1,"console.log(\"Server on Port: \"+PORT);"],[0,"\nvar tic"]],"start1":1607,"start2":1607,"length1":16,"length2":53}]],"length":3066,"saved":false}
{"ts":1348460407553,"patch":[[{"diffs":[[0,"cket) {\n"],[1,"    console.log(\"reached\");\n"],[0,"\tvar loc"]],"start1":1826,"start2":1826,"length1":16,"length2":44}]],"length":3094,"saved":false}
{"ts":1348460515937,"patch":[[{"diffs":[[0,"onse) {\n"],[1,"        console.log(\"response\");\n"],[0,"\t\trespon"]],"start1":2316,"start2":2316,"length1":16,"length2":49}]],"length":3127,"saved":false}
{"ts":1348460630758,"patch":[[{"diffs":[[0,"log("],[-1,"\""],[0,"response"],[-1,"\""],[0,");\n\t"]],"start1":2340,"start2":2340,"length1":18,"length2":16}]],"length":3125,"saved":false}
